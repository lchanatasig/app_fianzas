@model IEnumerable<app_fianzas.Models.SolicitudFianza>

@{
    ViewBag.Title = "Gestión de Solicitudes de Fianza";
    ViewBag.pTitle = "Solicitudes de Fianza";
    ViewBag.pageTitle = "Lista de Solicitudes";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

@section styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.2.9/css/responsive.bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.2.2/css/buttons.dataTables.min.css">
}
@using Microsoft.AspNetCore.Http
@{
    var usuarioId = ViewContext.HttpContext.Session.GetInt32("UsuarioId");
    var perfilId = ViewContext.HttpContext.Session.GetInt32("PerfilId");
}
<div class="col-xxl-12">
    <div class="card mt-xxl-n5">
        <div class="card shadow-sm">
            <div class="card-header text-white">
                <h2 class="mb-0">Solicitudes de Fianza</h2>
            </div>
            <div class="card-body p-4">
                <table id="solicitudesTable" class="table table-striped dt-responsive nowrap" style="width:100%">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Beneficiario</th>
                            <th>Tipo de Fianza</th>
                            <th>Monto</th>
                            <th>Estado</th>
                            <th>Acción</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var solicitud in Model)
                        {
                            <tr>
                                <td>@solicitud.SolicitudFianzaId</td>
                                <td>@(solicitud.Beneficiario?.NombreBeneficiario ?? "No definido")</td>
                                <td>@(solicitud.TipoFianza?.Nombre ?? "Sin datos")</td>
                                <td>@String.Format("{0:C}", solicitud.MontoFianza)</td>
                                <td>
                                    @switch (solicitud.EstadoFianzaId)
                                    {
                                        case 1:
                                            <span class="badge bg-warning">En espera de aprobación</span>
                                            break;
                                        case 2:
                                            <span class="badge bg-info">Aprobada sin documentación</span>
                                            break;
                                        case 3:
                                            <span class="badge bg-success">Aprobada y documentada</span>
                                            break;
                                        case 4:
                                            <span class="badge bg-success">Liberada</span>
                                            break;
                                        case 5:
                                            <span class="badge bg-danger">Rechazada</span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">Sin estado</span>
                                            break;
                                    }
                                </td>
                                <td>
                                    @if (solicitud.EstadoFianzaId == 2)
                                    {
                                        <button class="btn btn-primary btn-sm"
                                                data-bs-toggle="modal"
                                                data-bs-target="#gestionDocumentosModal"
                                                onclick="abrirModal(@solicitud.SolicitudFianzaId, @solicitud.MontoFianza)">
                                            Gestión Documentos
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-secondary btn-sm" disabled>Sin Acción</button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Gestión de Documentos -->
<div class="modal fade" id="gestionDocumentosModal" tabindex="-1" aria-labelledby="gestionDocumentosLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="gestionDocumentosLabel">Gestión de Documentos Firmados</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <!-- Sección de descargas -->
                <div>
                    <h6>Descargar Documentos:</h6>
                    <ul id="documentosListaModal">
                        <li><a href="@Url.Action("DescargarPdf", "Documentacion", new { tipo = "solicitud" })" download>Solicitud de Fianza (PDF)</a></li>
                        <li><a href="@Url.Action("DescargarPdf", "Documentacion", new { tipo = "convenio" })" download>Convenio de Fianza (PDF)</a></li>
                        <li><a href="@Url.Action("DescargarPdf", "Documentacion", new { tipo = "pagare" })" download>Pagaré (PDF)</a></li>
                        <li id="documentoAdicional" class="d-none"><a href="@Url.Action("DescargarPdf", "Documentacion", new { tipo = "prenda" })" download>Documento Adicional (Prenda PDF)</a></li>
                    </ul>
                </div>
                <hr />
                <!-- Formulario para subir documentos -->
                <form id="uploadDocumentsForm" class="needs-validation" novalidate enctype="multipart/form-data">
                    <input type="hidden" id="selectedSolicitudId" name="SolicitudFianzaId">
                    <input type="hidden" name="UsuarioId" value="@usuarioId">

                    <input type="hidden" name="Poliza" value="1" />
                    <div class="mb-3">
                        <label for="solicitudFile" class="form-label">Solicitud de Fianza (PDF)</label>
                        <input type="file" class="form-control" id="solicitudFile" name="DocumentoSolicitud" accept=".pdf" required>
                    </div>
                    <div class="mb-3">
                        <label for="convenioFile" class="form-label">Convenio de Fianza (PDF)</label>
                        <input type="file" class="form-control" id="convenioFile" name="DocumentoConvenio" accept=".pdf" required>
                    </div>
                    <div class="mb-3">
                        <label for="pagareFile" class="form-label">Pagaré (PDF)</label>
                        <input type="file" class="form-control" id="pagareFile" name="DocumentoPagare" accept=".pdf" required>
                    </div>
                    <div class="mb-3 d-none" id="extraDocumentoContainer">
                        <label for="extraDocumentoFile" class="form-label">Documento Adicional (PDF)</label>
                        <input type="file" class="form-control" id="extraDocumentoFile" name="DocumentoPrenda" accept=".pdf">
                    </div>
                    <button type="submit" class="btn btn-success w-100">Subir Documentos y Aprobar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        function abrirModal(solicitudId, montoFianza) {
            document.getElementById("selectedSolicitudId").value = solicitudId;

            if (montoFianza > 416000) {
                document.getElementById("extraDocumentoContainer").classList.remove("d-none");
                document.getElementById("documentoAdicional").classList.remove("d-none");
            } else {
                document.getElementById("extraDocumentoContainer").classList.add("d-none");
                document.getElementById("documentoAdicional").classList.add("d-none");
            }

            new bootstrap.Modal(document.getElementById("gestionDocumentosModal")).show();
        }

        document.getElementById("uploadDocumentsForm").addEventListener("submit", async function (event) {
            event.preventDefault();

            let form = document.getElementById("uploadDocumentsForm");
            if (!form.checkValidity()) {
                form.classList.add("was-validated");
                return;
            }

            let formData = new FormData(form);

            // Convertir archivos a base64
            formData.append("DocumentoSolicitud", await fileToBase64(document.getElementById("solicitudFile").files[0]));
            formData.append("DocumentoConvenio", await fileToBase64(document.getElementById("convenioFile").files[0]));
            formData.append("DocumentoPagare", await fileToBase64(document.getElementById("pagareFile").files[0]));

            // Si DocumentoPrenda existe
            if (document.getElementById("extraDocumentoFile").files.length > 0) {
                formData.append("DocumentoPrenda", await fileToBase64(document.getElementById("extraDocumentoFile").files[0]));
            }

            try {
                let response = await fetch('@Url.Action("InsertarDocumentacionYAprobar", "Documentos")', {
                    method: "POST",
                    body: formData
                });

                let result = await response.text();
                alert(result);
            } catch (error) {
                alert("Error al subir los documentos.");
            }
        });

        // Convertir archivo a base64
        async function fileToBase64(file) {
            return new Promise((resolve, reject) => {
                let reader = new FileReader();
                reader.onloadend = () => resolve(reader.result.split(',')[1]); // Extraer la cadena base64
                reader.onerror = reject;
                reader.readAsDataURL(file); // Convertir archivo a base64
            });
        }


    </script>
}
